// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package rpc;

// The greeting service definition.
service Greeter {
    // Sends a greeting
    rpc GetAccount(Address)returns (Response) {}
    rpc SendMessageRaw(SendMessageCode)returns (Response) {}
    rpc GetMessage(Hash)returns (Response) {}
    rpc GetBlockHash(Hash)returns (Response) {}
    rpc GetBlockHeight(Height)returns (Response) {}
    rpc LastHeight(Null)returns (Response) {}
    rpc Confirmed(Null)returns (Response) {}
    rpc GetMsgPool(Null)returns (Response) {}
    rpc Candidates(Null)returns (Response) {}
    rpc GetCycleSupers(Cycle)returns (Response) {}
    rpc Token(TokenAddress)returns (Response) {}
    rpc PeersInfo(Null)returns (Response) {}
    rpc LocalInfo(Null)returns (Response) {}
}

// The request message containing the user's name.
message Null {
}

message Address {
  string address = 1;
}

message TokenAddress {
  string token = 1;
}

message SendMessageCode{
  bytes code = 1;
}

message Hash{
  string hash = 1;
}

message Height{
  uint64 height = 1;
}

message Cycle{
  uint64 cycle = 1;
}



// The response message containing the greetings
message Response {
  int32 code = 1;
  bytes result = 2;
  string err = 3;
}
