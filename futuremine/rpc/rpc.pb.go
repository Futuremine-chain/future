// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NullReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NullReq) Reset()         { *m = NullReq{} }
func (m *NullReq) String() string { return proto.CompactTextString(m) }
func (*NullReq) ProtoMessage()    {}
func (*NullReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *NullReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullReq.Unmarshal(m, b)
}
func (m *NullReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullReq.Marshal(b, m, deterministic)
}
func (m *NullReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullReq.Merge(m, src)
}
func (m *NullReq) XXX_Size() int {
	return xxx_messageInfo_NullReq.Size(m)
}
func (m *NullReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NullReq.DiscardUnknown(m)
}

var xxx_messageInfo_NullReq proto.InternalMessageInfo

type AddressReq struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressReq) Reset()         { *m = AddressReq{} }
func (m *AddressReq) String() string { return proto.CompactTextString(m) }
func (*AddressReq) ProtoMessage()    {}
func (*AddressReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *AddressReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressReq.Unmarshal(m, b)
}
func (m *AddressReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressReq.Marshal(b, m, deterministic)
}
func (m *AddressReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressReq.Merge(m, src)
}
func (m *AddressReq) XXX_Size() int {
	return xxx_messageInfo_AddressReq.Size(m)
}
func (m *AddressReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddressReq proto.InternalMessageInfo

func (m *AddressReq) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type TokenAddressReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenAddressReq) Reset()         { *m = TokenAddressReq{} }
func (m *TokenAddressReq) String() string { return proto.CompactTextString(m) }
func (*TokenAddressReq) ProtoMessage()    {}
func (*TokenAddressReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *TokenAddressReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenAddressReq.Unmarshal(m, b)
}
func (m *TokenAddressReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenAddressReq.Marshal(b, m, deterministic)
}
func (m *TokenAddressReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenAddressReq.Merge(m, src)
}
func (m *TokenAddressReq) XXX_Size() int {
	return xxx_messageInfo_TokenAddressReq.Size(m)
}
func (m *TokenAddressReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenAddressReq.DiscardUnknown(m)
}

var xxx_messageInfo_TokenAddressReq proto.InternalMessageInfo

func (m *TokenAddressReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type SendMessageCodeReq struct {
	Code                 []byte   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageCodeReq) Reset()         { *m = SendMessageCodeReq{} }
func (m *SendMessageCodeReq) String() string { return proto.CompactTextString(m) }
func (*SendMessageCodeReq) ProtoMessage()    {}
func (*SendMessageCodeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *SendMessageCodeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageCodeReq.Unmarshal(m, b)
}
func (m *SendMessageCodeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageCodeReq.Marshal(b, m, deterministic)
}
func (m *SendMessageCodeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageCodeReq.Merge(m, src)
}
func (m *SendMessageCodeReq) XXX_Size() int {
	return xxx_messageInfo_SendMessageCodeReq.Size(m)
}
func (m *SendMessageCodeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageCodeReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageCodeReq proto.InternalMessageInfo

func (m *SendMessageCodeReq) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

type HashReq struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashReq) Reset()         { *m = HashReq{} }
func (m *HashReq) String() string { return proto.CompactTextString(m) }
func (*HashReq) ProtoMessage()    {}
func (*HashReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *HashReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashReq.Unmarshal(m, b)
}
func (m *HashReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashReq.Marshal(b, m, deterministic)
}
func (m *HashReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashReq.Merge(m, src)
}
func (m *HashReq) XXX_Size() int {
	return xxx_messageInfo_HashReq.Size(m)
}
func (m *HashReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HashReq.DiscardUnknown(m)
}

var xxx_messageInfo_HashReq proto.InternalMessageInfo

func (m *HashReq) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type HeightReq struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeightReq) Reset()         { *m = HeightReq{} }
func (m *HeightReq) String() string { return proto.CompactTextString(m) }
func (*HeightReq) ProtoMessage()    {}
func (*HeightReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

func (m *HeightReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeightReq.Unmarshal(m, b)
}
func (m *HeightReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeightReq.Marshal(b, m, deterministic)
}
func (m *HeightReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeightReq.Merge(m, src)
}
func (m *HeightReq) XXX_Size() int {
	return xxx_messageInfo_HeightReq.Size(m)
}
func (m *HeightReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HeightReq.DiscardUnknown(m)
}

var xxx_messageInfo_HeightReq proto.InternalMessageInfo

func (m *HeightReq) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type CycleReq struct {
	Cycle                uint64   `protobuf:"varint,1,opt,name=cycle,proto3" json:"cycle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CycleReq) Reset()         { *m = CycleReq{} }
func (m *CycleReq) String() string { return proto.CompactTextString(m) }
func (*CycleReq) ProtoMessage()    {}
func (*CycleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

func (m *CycleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CycleReq.Unmarshal(m, b)
}
func (m *CycleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CycleReq.Marshal(b, m, deterministic)
}
func (m *CycleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CycleReq.Merge(m, src)
}
func (m *CycleReq) XXX_Size() int {
	return xxx_messageInfo_CycleReq.Size(m)
}
func (m *CycleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CycleReq.DiscardUnknown(m)
}

var xxx_messageInfo_CycleReq proto.InternalMessageInfo

func (m *CycleReq) GetCycle() uint64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

type GenerateReq struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Publickey            string   `protobuf:"bytes,2,opt,name=publickey,proto3" json:"publickey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateReq) Reset()         { *m = GenerateReq{} }
func (m *GenerateReq) String() string { return proto.CompactTextString(m) }
func (*GenerateReq) ProtoMessage()    {}
func (*GenerateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7}
}

func (m *GenerateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateReq.Unmarshal(m, b)
}
func (m *GenerateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateReq.Marshal(b, m, deterministic)
}
func (m *GenerateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateReq.Merge(m, src)
}
func (m *GenerateReq) XXX_Size() int {
	return xxx_messageInfo_GenerateReq.Size(m)
}
func (m *GenerateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateReq.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateReq proto.InternalMessageInfo

func (m *GenerateReq) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *GenerateReq) GetPublickey() string {
	if m != nil {
		return m.Publickey
	}
	return ""
}

type TransactionReq struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Note                 string   `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	Amount               uint64   `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Fees                 uint64   `protobuf:"varint,6,opt,name=fees,proto3" json:"fees,omitempty"`
	Nonce                uint64   `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionReq) Reset()         { *m = TransactionReq{} }
func (m *TransactionReq) String() string { return proto.CompactTextString(m) }
func (*TransactionReq) ProtoMessage()    {}
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{8}
}

func (m *TransactionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionReq.Unmarshal(m, b)
}
func (m *TransactionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionReq.Marshal(b, m, deterministic)
}
func (m *TransactionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionReq.Merge(m, src)
}
func (m *TransactionReq) XXX_Size() int {
	return xxx_messageInfo_TransactionReq.Size(m)
}
func (m *TransactionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionReq proto.InternalMessageInfo

func (m *TransactionReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransactionReq) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransactionReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TransactionReq) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *TransactionReq) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransactionReq) GetFees() uint64 {
	if m != nil {
		return m.Fees
	}
	return 0
}

func (m *TransactionReq) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type TokenReq struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Receiver             string   `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Abbr                 string   `protobuf:"bytes,4,opt,name=abbr,proto3" json:"abbr,omitempty"`
	Increase             bool     `protobuf:"varint,5,opt,name=increase,proto3" json:"increase,omitempty"`
	Amount               uint64   `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Fees                 uint64   `protobuf:"varint,7,opt,name=fees,proto3" json:"fees,omitempty"`
	Nonce                uint64   `protobuf:"varint,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenReq) Reset()         { *m = TokenReq{} }
func (m *TokenReq) String() string { return proto.CompactTextString(m) }
func (*TokenReq) ProtoMessage()    {}
func (*TokenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{9}
}

func (m *TokenReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenReq.Unmarshal(m, b)
}
func (m *TokenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenReq.Marshal(b, m, deterministic)
}
func (m *TokenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenReq.Merge(m, src)
}
func (m *TokenReq) XXX_Size() int {
	return xxx_messageInfo_TokenReq.Size(m)
}
func (m *TokenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenReq.DiscardUnknown(m)
}

var xxx_messageInfo_TokenReq proto.InternalMessageInfo

func (m *TokenReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TokenReq) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *TokenReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TokenReq) GetAbbr() string {
	if m != nil {
		return m.Abbr
	}
	return ""
}

func (m *TokenReq) GetIncrease() bool {
	if m != nil {
		return m.Increase
	}
	return false
}

func (m *TokenReq) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TokenReq) GetFees() uint64 {
	if m != nil {
		return m.Fees
	}
	return 0
}

func (m *TokenReq) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type CandidateReq struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	P2Pid                string   `protobuf:"bytes,2,opt,name=p2pid,proto3" json:"p2pid,omitempty"`
	Fees                 uint64   `protobuf:"varint,3,opt,name=fees,proto3" json:"fees,omitempty"`
	Nonce                uint64   `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CandidateReq) Reset()         { *m = CandidateReq{} }
func (m *CandidateReq) String() string { return proto.CompactTextString(m) }
func (*CandidateReq) ProtoMessage()    {}
func (*CandidateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{10}
}

func (m *CandidateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandidateReq.Unmarshal(m, b)
}
func (m *CandidateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandidateReq.Marshal(b, m, deterministic)
}
func (m *CandidateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandidateReq.Merge(m, src)
}
func (m *CandidateReq) XXX_Size() int {
	return xxx_messageInfo_CandidateReq.Size(m)
}
func (m *CandidateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CandidateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CandidateReq proto.InternalMessageInfo

func (m *CandidateReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *CandidateReq) GetP2Pid() string {
	if m != nil {
		return m.P2Pid
	}
	return ""
}

func (m *CandidateReq) GetFees() uint64 {
	if m != nil {
		return m.Fees
	}
	return 0
}

func (m *CandidateReq) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type CancelReq struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Fees                 uint64   `protobuf:"varint,2,opt,name=fees,proto3" json:"fees,omitempty"`
	Nonce                uint64   `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelReq) Reset()         { *m = CancelReq{} }
func (m *CancelReq) String() string { return proto.CompactTextString(m) }
func (*CancelReq) ProtoMessage()    {}
func (*CancelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{11}
}

func (m *CancelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelReq.Unmarshal(m, b)
}
func (m *CancelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelReq.Marshal(b, m, deterministic)
}
func (m *CancelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelReq.Merge(m, src)
}
func (m *CancelReq) XXX_Size() int {
	return xxx_messageInfo_CancelReq.Size(m)
}
func (m *CancelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelReq.DiscardUnknown(m)
}

var xxx_messageInfo_CancelReq proto.InternalMessageInfo

func (m *CancelReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *CancelReq) GetFees() uint64 {
	if m != nil {
		return m.Fees
	}
	return 0
}

func (m *CancelReq) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type VoteReq struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Fees                 uint64   `protobuf:"varint,3,opt,name=fees,proto3" json:"fees,omitempty"`
	Nonce                uint64   `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteReq) Reset()         { *m = VoteReq{} }
func (m *VoteReq) String() string { return proto.CompactTextString(m) }
func (*VoteReq) ProtoMessage()    {}
func (*VoteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{12}
}

func (m *VoteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteReq.Unmarshal(m, b)
}
func (m *VoteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteReq.Marshal(b, m, deterministic)
}
func (m *VoteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteReq.Merge(m, src)
}
func (m *VoteReq) XXX_Size() int {
	return xxx_messageInfo_VoteReq.Size(m)
}
func (m *VoteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteReq.DiscardUnknown(m)
}

var xxx_messageInfo_VoteReq proto.InternalMessageInfo

func (m *VoteReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *VoteReq) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *VoteReq) GetFees() uint64 {
	if m != nil {
		return m.Fees
	}
	return 0
}

func (m *VoteReq) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

// The response message containing the greetings
type Response struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Result               []byte   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{13}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*NullReq)(nil), "rpc.NullReq")
	proto.RegisterType((*AddressReq)(nil), "rpc.AddressReq")
	proto.RegisterType((*TokenAddressReq)(nil), "rpc.TokenAddressReq")
	proto.RegisterType((*SendMessageCodeReq)(nil), "rpc.SendMessageCodeReq")
	proto.RegisterType((*HashReq)(nil), "rpc.HashReq")
	proto.RegisterType((*HeightReq)(nil), "rpc.HeightReq")
	proto.RegisterType((*CycleReq)(nil), "rpc.CycleReq")
	proto.RegisterType((*GenerateReq)(nil), "rpc.GenerateReq")
	proto.RegisterType((*TransactionReq)(nil), "rpc.TransactionReq")
	proto.RegisterType((*TokenReq)(nil), "rpc.TokenReq")
	proto.RegisterType((*CandidateReq)(nil), "rpc.CandidateReq")
	proto.RegisterType((*CancelReq)(nil), "rpc.CancelReq")
	proto.RegisterType((*VoteReq)(nil), "rpc.VoteReq")
	proto.RegisterType((*Response)(nil), "rpc.Response")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 718 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x5d, 0x6f, 0xd3, 0x3c,
	0x14, 0x7e, 0xfb, 0x99, 0xf6, 0xac, 0x6b, 0x37, 0xbf, 0x13, 0x54, 0x13, 0x48, 0x53, 0x90, 0x60,
	0x02, 0x51, 0x60, 0xc0, 0x05, 0xdc, 0x8d, 0x0a, 0x75, 0x93, 0x06, 0x9a, 0xb2, 0x09, 0xae, 0x5d,
	0xe7, 0x6c, 0x8d, 0x9a, 0xda, 0x99, 0xed, 0x32, 0xed, 0xdf, 0x70, 0xc5, 0xef, 0xe0, 0xa7, 0x21,
	0x3b, 0x4e, 0x9a, 0x2d, 0x99, 0xd6, 0xbb, 0xf3, 0x38, 0xcf, 0xf9, 0x78, 0xfc, 0xf1, 0x04, 0xba,
	0x32, 0x61, 0xa3, 0x44, 0x0a, 0x2d, 0x48, 0x43, 0x26, 0xcc, 0xef, 0x82, 0xf7, 0x7d, 0x19, 0xc7,
	0x01, 0x5e, 0xf9, 0xcf, 0x01, 0x0e, 0xc3, 0x50, 0xa2, 0x52, 0x01, 0x5e, 0x91, 0x21, 0x78, 0x34,
	0x45, 0xc3, 0xda, 0x5e, 0x6d, 0xbf, 0x1b, 0x64, 0xd0, 0x7f, 0x01, 0x83, 0x73, 0x31, 0x47, 0x5e,
	0x20, 0xef, 0x40, 0x4b, 0x9b, 0x25, 0x47, 0x4d, 0x81, 0xbf, 0x0f, 0xe4, 0x0c, 0x79, 0xf8, 0x0d,
	0x95, 0xa2, 0x97, 0x38, 0x16, 0x21, 0x1a, 0x2e, 0x81, 0x26, 0x13, 0x21, 0x5a, 0x6a, 0x2f, 0xb0,
	0xb1, 0xff, 0x14, 0xbc, 0x23, 0xaa, 0x66, 0xee, 0xf3, 0x8c, 0xaa, 0x99, 0xab, 0x64, 0x63, 0xff,
	0x19, 0x74, 0x8f, 0x30, 0xba, 0x9c, 0x69, 0x43, 0x78, 0x04, 0xed, 0x99, 0x05, 0x96, 0xd2, 0x0c,
	0x1c, 0xf2, 0xf7, 0xa0, 0x33, 0xbe, 0x61, 0x31, 0xba, 0x79, 0x98, 0x89, 0x1d, 0x25, 0x05, 0xfe,
	0x57, 0xd8, 0x98, 0x20, 0x47, 0x49, 0x35, 0x3a, 0x85, 0x1c, 0xf5, 0xb5, 0x90, 0xf3, 0x4c, 0xa1,
	0x83, 0xe4, 0x09, 0x74, 0x93, 0xe5, 0x34, 0x8e, 0xd8, 0x1c, 0x6f, 0x86, 0x75, 0xfb, 0x6d, 0xb5,
	0xe0, 0xff, 0xae, 0x41, 0xff, 0x5c, 0x52, 0xae, 0x28, 0xd3, 0x91, 0xe0, 0x6e, 0xe8, 0x0b, 0x29,
	0x16, 0xd9, 0xd0, 0x26, 0x26, 0x7d, 0xa8, 0x6b, 0xe1, 0xb2, 0xeb, 0x5a, 0xac, 0xf6, 0xa8, 0x51,
	0xd8, 0x23, 0x93, 0xc9, 0x85, 0xc6, 0x61, 0x33, 0xcd, 0x34, 0xb1, 0x51, 0x48, 0x17, 0x62, 0xc9,
	0xf5, 0xb0, 0x95, 0x2a, 0x4c, 0x91, 0xed, 0x82, 0xa8, 0x86, 0x6d, 0xbb, 0x6a, 0x63, 0x53, 0x95,
	0x0b, 0xce, 0x70, 0xe8, 0xa5, 0x4a, 0x2d, 0xf0, 0xff, 0xd6, 0xa0, 0x63, 0xcf, 0xe8, 0xbe, 0xe1,
	0x76, 0xa1, 0x23, 0x91, 0x61, 0xf4, 0x0b, 0xa5, 0x1b, 0x31, 0xc7, 0x76, 0x24, 0xba, 0x40, 0x37,
	0xa7, 0x8d, 0xcd, 0x1a, 0x9d, 0x4e, 0x65, 0x36, 0xa6, 0x89, 0x4d, 0x8d, 0x88, 0x33, 0x89, 0x54,
	0xa1, 0x1d, 0xb4, 0x13, 0xe4, 0xb8, 0x20, 0xa1, 0x5d, 0x29, 0xc1, 0xab, 0x92, 0xd0, 0x29, 0x4a,
	0x98, 0x42, 0x6f, 0x4c, 0x79, 0x18, 0x85, 0xee, 0xb4, 0xaa, 0x54, 0xec, 0x40, 0x2b, 0x39, 0x48,
	0xa2, 0xd0, 0x49, 0x48, 0x41, 0xde, 0xa3, 0x51, 0xd5, 0xa3, 0x59, 0xec, 0x71, 0x0c, 0xdd, 0x31,
	0xe5, 0x0c, 0xe3, 0xfb, 0x1a, 0x64, 0xa5, 0xea, 0x55, 0xa5, 0x1a, 0xc5, 0x52, 0x3f, 0xc1, 0xfb,
	0x21, 0xee, 0x9f, 0xf4, 0xee, 0x65, 0x58, 0x7f, 0xc6, 0x23, 0xe8, 0x04, 0xa8, 0x12, 0xc1, 0x15,
	0xde, 0x7a, 0x3a, 0xad, 0xf4, 0xe9, 0x98, 0x9d, 0x96, 0xa8, 0x96, 0xb1, 0xb6, 0xd5, 0x7b, 0x81,
	0x43, 0x64, 0x0b, 0x1a, 0x28, 0xa5, 0x3b, 0x44, 0x13, 0x1e, 0xfc, 0xf1, 0xc0, 0x9b, 0x48, 0x44,
	0x8d, 0x92, 0x8c, 0x00, 0x26, 0xa8, 0x0f, 0x19, 0xb3, 0xa7, 0x32, 0x18, 0x19, 0x57, 0x58, 0xbd,
	0xe7, 0xdd, 0x4d, 0xbb, 0x90, 0xf5, 0xf5, 0xff, 0x23, 0x9f, 0xa1, 0x5f, 0x78, 0xca, 0x01, 0xbd,
	0x26, 0x8f, 0x2d, 0xa5, 0xfc, 0xbe, 0xcb, 0xb9, 0xaf, 0x6c, 0x2f, 0xc7, 0x22, 0x3d, 0xfb, 0xd9,
	0xbd, 0xf6, 0x32, 0xf9, 0x35, 0xf4, 0x26, 0xa8, 0xbf, 0xc4, 0x82, 0xcd, 0x0d, 0xe7, 0x21, 0xfa,
	0x3b, 0xe8, 0xe7, 0x74, 0x6b, 0x03, 0xa4, 0x9f, 0x26, 0x64, 0x76, 0x51, 0x39, 0xce, 0x09, 0x55,
	0xda, 0xd1, 0xd3, 0xfa, 0xce, 0x02, 0xcb, 0xe4, 0x97, 0xd0, 0x1d, 0x0b, 0x7e, 0x11, 0xc9, 0x05,
	0x86, 0x0f, 0x71, 0x9d, 0x4e, 0x75, 0x79, 0x2a, 0x44, 0xbc, 0x06, 0x39, 0xbf, 0xde, 0xea, 0x21,
	0xf2, 0x5b, 0xab, 0xd2, 0xba, 0xdb, 0xd9, 0x32, 0x41, 0xa9, 0x48, 0x4a, 0xc9, 0xfc, 0xae, 0x9c,
	0x31, 0x82, 0x96, 0x7d, 0xff, 0x64, 0xc7, 0x7e, 0xb9, 0xe3, 0xd7, 0x95, 0x3a, 0x4f, 0x11, 0xa5,
	0x3a, 0xe6, 0x17, 0x62, 0x8d, 0x3d, 0x39, 0x11, 0x8c, 0xc6, 0xeb, 0x70, 0x3f, 0xc0, 0x20, 0xb3,
	0x5c, 0xd7, 0x9e, 0x6c, 0x59, 0x4e, 0xc1, 0x88, 0xcb, 0x59, 0x9f, 0x60, 0x7b, 0x2c, 0x91, 0x6a,
	0x2c, 0xd8, 0x2c, 0xf9, 0x3f, 0x55, 0x72, 0xcb, 0x78, 0xab, 0xee, 0xcf, 0x86, 0x4b, 0xb5, 0xf2,
	0x37, 0x57, 0xf2, 0x2b, 0xe9, 0x1f, 0x61, 0x90, 0xd2, 0xf3, 0xc3, 0x20, 0xdb, 0xe9, 0xd6, 0x16,
	0xbc, 0xa7, 0x9c, 0xf6, 0x06, 0x7a, 0x79, 0x1a, 0xc3, 0xd8, 0x5d, 0xba, 0xdc, 0x4b, 0xaa, 0x8f,
	0xdb, 0x26, 0x18, 0x93, 0x70, 0x9b, 0xe6, 0xfc, 0xa2, 0x44, 0x9e, 0xb6, 0xed, 0xff, 0xf9, 0xfd,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe7, 0xf2, 0x6f, 0xe0, 0xac, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	GetAccount(ctx context.Context, in *AddressReq, opts ...grpc.CallOption) (*Response, error)
	SendMessageRaw(ctx context.Context, in *SendMessageCodeReq, opts ...grpc.CallOption) (*Response, error)
	GetMessage(ctx context.Context, in *HashReq, opts ...grpc.CallOption) (*Response, error)
	GetBlockHash(ctx context.Context, in *HashReq, opts ...grpc.CallOption) (*Response, error)
	GetBlockHeight(ctx context.Context, in *HeightReq, opts ...grpc.CallOption) (*Response, error)
	LastHeight(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error)
	Confirmed(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error)
	GetMsgPool(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error)
	Candidates(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error)
	GetCycleSupers(ctx context.Context, in *CycleReq, opts ...grpc.CallOption) (*Response, error)
	Token(ctx context.Context, in *TokenAddressReq, opts ...grpc.CallOption) (*Response, error)
	PeersInfo(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error)
	LocalInfo(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error)
	GenerateAddress(ctx context.Context, in *GenerateReq, opts ...grpc.CallOption) (*Response, error)
	CreateTransaction(ctx context.Context, in *TransactionReq, opts ...grpc.CallOption) (*Response, error)
	CreateToken(ctx context.Context, in *TokenReq, opts ...grpc.CallOption) (*Response, error)
	CreateCandidate(ctx context.Context, in *CandidateReq, opts ...grpc.CallOption) (*Response, error)
	CreateCancel(ctx context.Context, in *CancelReq, opts ...grpc.CallOption) (*Response, error)
	CreateVote(ctx context.Context, in *VoteReq, opts ...grpc.CallOption) (*Response, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) GetAccount(ctx context.Context, in *AddressReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SendMessageRaw(ctx context.Context, in *SendMessageCodeReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/SendMessageRaw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetMessage(ctx context.Context, in *HashReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetBlockHash(ctx context.Context, in *HashReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetBlockHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetBlockHeight(ctx context.Context, in *HeightReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetBlockHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) LastHeight(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/LastHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) Confirmed(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/Confirmed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetMsgPool(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetMsgPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) Candidates(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/Candidates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetCycleSupers(ctx context.Context, in *CycleReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetCycleSupers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) Token(ctx context.Context, in *TokenAddressReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/Token", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) PeersInfo(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/PeersInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) LocalInfo(ctx context.Context, in *NullReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/LocalInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GenerateAddress(ctx context.Context, in *GenerateReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GenerateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CreateTransaction(ctx context.Context, in *TransactionReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/CreateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CreateToken(ctx context.Context, in *TokenReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/CreateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CreateCandidate(ctx context.Context, in *CandidateReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/CreateCandidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CreateCancel(ctx context.Context, in *CancelReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/CreateCancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CreateVote(ctx context.Context, in *VoteReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/CreateVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	GetAccount(context.Context, *AddressReq) (*Response, error)
	SendMessageRaw(context.Context, *SendMessageCodeReq) (*Response, error)
	GetMessage(context.Context, *HashReq) (*Response, error)
	GetBlockHash(context.Context, *HashReq) (*Response, error)
	GetBlockHeight(context.Context, *HeightReq) (*Response, error)
	LastHeight(context.Context, *NullReq) (*Response, error)
	Confirmed(context.Context, *NullReq) (*Response, error)
	GetMsgPool(context.Context, *NullReq) (*Response, error)
	Candidates(context.Context, *NullReq) (*Response, error)
	GetCycleSupers(context.Context, *CycleReq) (*Response, error)
	Token(context.Context, *TokenAddressReq) (*Response, error)
	PeersInfo(context.Context, *NullReq) (*Response, error)
	LocalInfo(context.Context, *NullReq) (*Response, error)
	GenerateAddress(context.Context, *GenerateReq) (*Response, error)
	CreateTransaction(context.Context, *TransactionReq) (*Response, error)
	CreateToken(context.Context, *TokenReq) (*Response, error)
	CreateCandidate(context.Context, *CandidateReq) (*Response, error)
	CreateCancel(context.Context, *CancelReq) (*Response, error)
	CreateVote(context.Context, *VoteReq) (*Response, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) GetAccount(ctx context.Context, req *AddressReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (*UnimplementedGreeterServer) SendMessageRaw(ctx context.Context, req *SendMessageCodeReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessageRaw not implemented")
}
func (*UnimplementedGreeterServer) GetMessage(ctx context.Context, req *HashReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessage not implemented")
}
func (*UnimplementedGreeterServer) GetBlockHash(ctx context.Context, req *HashReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockHash not implemented")
}
func (*UnimplementedGreeterServer) GetBlockHeight(ctx context.Context, req *HeightReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockHeight not implemented")
}
func (*UnimplementedGreeterServer) LastHeight(ctx context.Context, req *NullReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LastHeight not implemented")
}
func (*UnimplementedGreeterServer) Confirmed(ctx context.Context, req *NullReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Confirmed not implemented")
}
func (*UnimplementedGreeterServer) GetMsgPool(ctx context.Context, req *NullReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMsgPool not implemented")
}
func (*UnimplementedGreeterServer) Candidates(ctx context.Context, req *NullReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Candidates not implemented")
}
func (*UnimplementedGreeterServer) GetCycleSupers(ctx context.Context, req *CycleReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCycleSupers not implemented")
}
func (*UnimplementedGreeterServer) Token(ctx context.Context, req *TokenAddressReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Token not implemented")
}
func (*UnimplementedGreeterServer) PeersInfo(ctx context.Context, req *NullReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PeersInfo not implemented")
}
func (*UnimplementedGreeterServer) LocalInfo(ctx context.Context, req *NullReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LocalInfo not implemented")
}
func (*UnimplementedGreeterServer) GenerateAddress(ctx context.Context, req *GenerateReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateAddress not implemented")
}
func (*UnimplementedGreeterServer) CreateTransaction(ctx context.Context, req *TransactionReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransaction not implemented")
}
func (*UnimplementedGreeterServer) CreateToken(ctx context.Context, req *TokenReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateToken not implemented")
}
func (*UnimplementedGreeterServer) CreateCandidate(ctx context.Context, req *CandidateReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCandidate not implemented")
}
func (*UnimplementedGreeterServer) CreateCancel(ctx context.Context, req *CancelReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCancel not implemented")
}
func (*UnimplementedGreeterServer) CreateVote(ctx context.Context, req *VoteReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVote not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetAccount(ctx, req.(*AddressReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SendMessageRaw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendMessageRaw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/SendMessageRaw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendMessageRaw(ctx, req.(*SendMessageCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetMessage(ctx, req.(*HashReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetBlockHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetBlockHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetBlockHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetBlockHash(ctx, req.(*HashReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeightReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetBlockHeight(ctx, req.(*HeightReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_LastHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).LastHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/LastHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).LastHeight(ctx, req.(*NullReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_Confirmed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Confirmed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/Confirmed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Confirmed(ctx, req.(*NullReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetMsgPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetMsgPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetMsgPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetMsgPool(ctx, req.(*NullReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_Candidates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Candidates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/Candidates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Candidates(ctx, req.(*NullReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetCycleSupers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CycleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetCycleSupers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetCycleSupers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetCycleSupers(ctx, req.(*CycleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_Token_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenAddressReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Token(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/Token",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Token(ctx, req.(*TokenAddressReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_PeersInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).PeersInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/PeersInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).PeersInfo(ctx, req.(*NullReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_LocalInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).LocalInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/LocalInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).LocalInfo(ctx, req.(*NullReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GenerateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GenerateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GenerateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GenerateAddress(ctx, req.(*GenerateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/CreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CreateTransaction(ctx, req.(*TransactionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CreateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CreateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/CreateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CreateToken(ctx, req.(*TokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CreateCandidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CandidateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CreateCandidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/CreateCandidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CreateCandidate(ctx, req.(*CandidateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CreateCancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CreateCancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/CreateCancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CreateCancel(ctx, req.(*CancelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CreateVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CreateVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/CreateVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CreateVote(ctx, req.(*VoteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _Greeter_GetAccount_Handler,
		},
		{
			MethodName: "SendMessageRaw",
			Handler:    _Greeter_SendMessageRaw_Handler,
		},
		{
			MethodName: "GetMessage",
			Handler:    _Greeter_GetMessage_Handler,
		},
		{
			MethodName: "GetBlockHash",
			Handler:    _Greeter_GetBlockHash_Handler,
		},
		{
			MethodName: "GetBlockHeight",
			Handler:    _Greeter_GetBlockHeight_Handler,
		},
		{
			MethodName: "LastHeight",
			Handler:    _Greeter_LastHeight_Handler,
		},
		{
			MethodName: "Confirmed",
			Handler:    _Greeter_Confirmed_Handler,
		},
		{
			MethodName: "GetMsgPool",
			Handler:    _Greeter_GetMsgPool_Handler,
		},
		{
			MethodName: "Candidates",
			Handler:    _Greeter_Candidates_Handler,
		},
		{
			MethodName: "GetCycleSupers",
			Handler:    _Greeter_GetCycleSupers_Handler,
		},
		{
			MethodName: "Token",
			Handler:    _Greeter_Token_Handler,
		},
		{
			MethodName: "PeersInfo",
			Handler:    _Greeter_PeersInfo_Handler,
		},
		{
			MethodName: "LocalInfo",
			Handler:    _Greeter_LocalInfo_Handler,
		},
		{
			MethodName: "GenerateAddress",
			Handler:    _Greeter_GenerateAddress_Handler,
		},
		{
			MethodName: "CreateTransaction",
			Handler:    _Greeter_CreateTransaction_Handler,
		},
		{
			MethodName: "CreateToken",
			Handler:    _Greeter_CreateToken_Handler,
		},
		{
			MethodName: "CreateCandidate",
			Handler:    _Greeter_CreateCandidate_Handler,
		},
		{
			MethodName: "CreateCancel",
			Handler:    _Greeter_CreateCancel_Handler,
		},
		{
			MethodName: "CreateVote",
			Handler:    _Greeter_CreateVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
